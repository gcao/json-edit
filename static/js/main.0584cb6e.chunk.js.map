{"version":3,"sources":["features/json-edit/edit-popup/slice.ts","features/json-edit/edit-popup/index.tsx","features/json-edit/utils.ts","features/json-edit/slice.ts","features/json-edit/JsonEditPopup.tsx","jpath/index.ts","features/json-edit/ArrayOfArraysPresenter.tsx","features/json-edit/ArrayOfLiteralsPresenter.tsx","features/json-edit/ArrayOfObjectsPresenter.tsx","features/json-edit/ArrayPresenter.tsx","features/json-edit/LiteralPresenter.tsx","features/json-edit/ObjectPresenter.tsx","features/json-edit/GenericPresenter.tsx","features/layout/slice.ts","features/json-edit/JsonRootPresenter.tsx","App.tsx","app/store.ts","index.tsx","utils/index.ts"],"names":["slice","createSlice","name","initialState","editing","reducers","show","state","hide","actions","selectEditing","EditPopup","onSave","children","dispatch","useDispatch","useSelector","closeHandler","className","classNames","onSubmit","aria-label","onClick","type","createMouseOverHandler","path","pathUnderMouse","e","preventDefault","stopPropagation","toString","setPath","rawData","data","clearPath","action","payload","updateJson","JSON","parse","updateData","obj","value","update","stringify","updatePropName","selectData","selectPathUnderMouse","JsonEditPopup","input","useEffect","focus","dataToEdit","search","defaultValue","ref","node","PathType","JPath","parent","index","key","this","ARRAY_ELEMENT","ARRAY_ALL","MAP_KEY","MAP_VALUE","ROOT","target","pathItems","spread","i","length","pathItem","R","Array","Object","Error","newValue","isRoot","parentValue","items","unshift","ArrayOfArraysPresenter","props","width","Number","map","sort","onMouseOver","align","createArrayAllChildren","createArrayChild","row","valign","j","newPath","GenericPresenter","ArrayOfLiteralsPresenter","ArrayOfObjectsPresenter","keys","createMapKeyChild","createMapValueChild","ArrayPresenter","LiteralPresenter","editInPopup","Boolean","checked","onChange","onDoubleClick","ObjectPresenter","LayoutOrientation","JsonRootPresenter","Root","onMouseOut","orientation","Vertical","changeOrientation","selectOrientation","App","Horizontal","id","rows","cols","event","store","configureStore","reducer","layout","layoutReducers","jsonEdit","jsonEditReducers","editPopup","editPopupReducers","middleware","getDefaultMiddleware","serializableCheck","locationHandler","hasJson","jsonUrl","useProxy","url","URL","window","location","proxy","searchParams","get","fetch","decodeURI","response","text","a","getText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0584cb6e.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../../../app/store';\n\ninterface EditPopupState {\n  editing: boolean,\n}\n\nconst initialState: EditPopupState = {\n  editing: false,\n};\n\nexport const STATE_KEY = \"editPopup\";\n\nexport const slice = createSlice({\n  name: STATE_KEY,\n  initialState,\n  reducers: {\n    show(state) {\n      state.editing = true;\n    },\n    hide(state) {\n      state.editing = false;\n    },\n  },\n});\n\nexport const { show, hide } = slice.actions;\n\nexport const selectEditing = (state: RootState) => state[STATE_KEY].editing;\n\nexport default slice.reducer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hide, selectEditing } from './slice';\n\nexport default function EditPopup({onSave, children}: any) {\n  const dispatch = useDispatch();\n  const editing = useSelector(selectEditing);\n\n  const closeHandler = () => {\n    dispatch(hide());\n  };\n  const saveHandler = () => {\n    dispatch(hide());\n    onSave();\n  };\n\n  return (\n    <div className={classNames(\"modal\", {\"is-active\": editing})}>\n      <form onSubmit={saveHandler}>\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <p className=\"modal-card-title\">Modal title</p>\n            <button className=\"delete\" aria-label=\"close\" onClick={closeHandler}></button>\n          </header>\n          <section className=\"modal-card-body\">\n            {children}\n          </section>\n          <footer className=\"modal-card-foot\">\n            <button type=\"submit\" className=\"button is-success\">Save changes</button>\n            <button type=\"button\" className=\"button\" onClick={closeHandler}>Cancel</button>\n          </footer>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import { setPath } from './slice';\n\nexport function stringify(obj: any) {\n  return JSON.stringify(obj, null, 2);\n}\n\nexport function createMouseOverHandler(dispatch: any, path: any, pathUnderMouse: any) {\n  return (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!pathUnderMouse || path.toString() !== pathUnderMouse.toString()) {\n      dispatch(setPath(path));\n    }\n  };\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\nimport JPath from '../../jpath';\nimport { stringify } from './utils';\n\ninterface JsonEditState {\n  rawData: string,\n  data: any,\n  pathUnderMouse?: JPath,\n}\n\nconst initialState: JsonEditState = {\n  rawData: \"null\",\n  data: null,\n};\n\nexport const STATE_KEY = \"jsonEdit\";\n\nexport const slice = createSlice({\n  name: STATE_KEY,\n  initialState,\n  reducers: {\n    clearPath(state: any) {\n      state.pathUnderMouse = null;\n    },\n    setPath(state: any, action: PayloadAction<any>) {\n      state.pathUnderMouse = action.payload;\n    },\n    updateJson(state: any, action: PayloadAction<any>) {\n      state.rawData = action.payload;\n      state.data = JSON.parse(action.payload);\n    },\n    updateData(state: any, action: PayloadAction<any>) {\n      let { path, value } = action.payload;\n      state.data = path.update(state.data, value);\n      state.rawData = stringify(state.data);\n    },\n    updatePropName(state: any, action: PayloadAction<any>) {\n      // TODO\n      // path = action.path;\n      // var oldName = action.oldName;\n      // var newName = action.newName;\n      // // TODO make a copy instead of change in place to support undo/redo\n      // current = path.findIn(state.data);\n      // current[newName] = current[oldName];\n      // delete current[oldName];\n      // return Object.assign({}, state, {\n      //     rawData: JSON.stringify(state.data, null, 4),\n      //     data: state.data\n      // });\n    }\n  },\n});\n\nexport const {\n  clearPath,\n  setPath,\n  updateJson,\n  updateData,\n  updatePropName,\n} = slice.actions;\n\nexport const selectData = (state: RootState) => state[STATE_KEY].data;\nexport const selectPathUnderMouse = (state: RootState) => state[STATE_KEY].pathUnderMouse;\n\nexport default slice.reducer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EditPopup from './edit-popup';\nimport { selectEditing } from './edit-popup/slice';\nimport { selectData, selectPathUnderMouse, updateData } from './slice';\n\nexport default function JsonEditPopup() {\n  const dispatch = useDispatch();\n  let editing = useSelector(selectEditing);\n  let data = useSelector(selectData);\n  let pathUnderMouse = useSelector(selectPathUnderMouse);\n  let input: any;\n  useEffect(() => {\n    if (input) {\n      input.focus();\n    }\n  });\n\n  if (!editing) {\n    return null;\n  }\n\n  let dataToEdit = pathUnderMouse?.search(data);\n  const saveHandler = () => {\n    dispatch(updateData({ path: pathUnderMouse, value: input.value }));\n  }\n\n  return (\n    <EditPopup onSave={saveHandler}>\n      <div className=\"field\">\n        <label className=\"label\">New Value:</label>\n        <div className=\"control\">\n          <input className=\"input\" type=\"text\" defaultValue={dataToEdit}\n            ref={node => input = node} />\n        </div>\n      </div>\n    </EditPopup>\n  );\n}\n","import * as R from \"ramda\";\n\nexport enum PathType {\n  ROOT = 0,\n  ARRAY_ELEMENT = 1,\n  MAP_KEY = 2,\n  MAP_VALUE = 3,\n  ARRAY_ALL = 4, // match all child elements of an array\n}\n\nexport default class JPath {\n  public index?: number;\n  public key?: String;\n\n  private constructor(public parent: JPath | null, public type: PathType) {\n  }\n\n  public static Root(): JPath {\n    return new JPath(null, PathType.ROOT);\n  }\n\n  public createArrayChild(index: number): JPath {\n    let path = new JPath(this, PathType.ARRAY_ELEMENT);\n    path.index = index;\n    return path;\n  }\n\n  public createArrayAllChildren(): JPath {\n    let path = new JPath(this, PathType.ARRAY_ALL);\n    return path;\n  }\n\n  public createMapKeyChild(key: string): JPath {\n    let path = new JPath(this, PathType.MAP_KEY);\n    path.key = key;\n    return path;\n  }\n\n  public createMapValueChild(key: string): JPath {\n    let path = new JPath(this, PathType.MAP_VALUE);\n    path.key = key;\n    return path;\n  }\n\n  public isRoot(): boolean {\n    return this.type === PathType.ROOT;\n  }\n\n  /**\n   * Search matching part in target\n   *\n   * @param target target JSON value\n   */\n  public search(target: any): any {\n    let pathItems = this.spread();\n    for (let i = 0; i < pathItems.length; i++) {\n      let pathItem = pathItems[i];\n      switch (pathItem.type) {\n        case PathType.ARRAY_ELEMENT:\n          if (R.is(Array, target)) {\n            target = target[pathItem.index as number];\n          } else {\n            return;\n          }\n          break;\n\n        case PathType.MAP_KEY:\n          if (R.is(Object, target)) {\n            target = pathItem.key;\n          } else {\n            return;\n          }\n          break;\n\n        case PathType.MAP_VALUE:\n          if (R.is(Object, target)) {\n            target = target[pathItem.key as string];\n          } else {\n            return;\n          }\n          break;\n\n        case PathType.ARRAY_ALL:\n          throw new Error(\"JPath search error: unsupported path type - ARRAY_ALL\");\n      }\n    }\n\n    return target;\n  }\n\n  /**\n   * @param target root JSON value\n   * @param newValue new value to replace the matched part\n   *\n   * @returns whole object with matching part replaced with newValue\n   *          if the path matches the root value, then return newValue directly\n   */\n  public update(target: any, newValue: any): any {\n    if (this.isRoot()) {\n      return newValue;\n    }\n\n    let parentValue = (this.parent as JPath).search(target);\n    switch (this.type) {\n      case PathType.ARRAY_ELEMENT:\n        if (R.is(Array, parentValue)) {\n          parentValue[this.index as number] = newValue;\n        } else {\n          throw new Error(\"JPath update error: ARRAY_ELEMENT can only be applied on an array\");\n        }\n        break;\n\n      case PathType.MAP_VALUE:\n        if (R.is(Object, parentValue)) {\n          parentValue[this.key as string] = newValue;\n        } else {\n          throw new Error(\"JPath update error: MAP_VALUE can only be applied on an object\");\n        }\n        break;\n\n      default:\n        throw new Error(`JPath update error: unsupported path type - ${PathType[this.type]}`);\n    }\n\n    return target;\n  }\n\n  public toString(): string {\n    switch (this.type) {\n      case PathType.ROOT:\n        return \"root\";\n      case PathType.ARRAY_ELEMENT:\n        return `${this.parent?.toString()}[${this.index}]`;\n      case PathType.ARRAY_ALL:\n        return `${this.parent?.toString()}[*]`;\n      case PathType.MAP_KEY:\n      case PathType.MAP_VALUE:\n        return `${this.parent?.toString()}[\"${this.key}\"]`;\n    }\n  }\n\n  private spread(): JPath[] {\n    let items: JPath[] = [];\n    let path: JPath = this;\n    while (path !== null) {\n      items.unshift(path);\n      path = path.parent as JPath;\n    }\n    return items;\n  }\n}\n","import * as R from 'ramda';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport GenericPresenter from './GenericPresenter';\nimport { createMouseOverHandler } from './utils';\n\nexport default function ArrayOfArraysPresenter(props: any) {\n  const dispatch = useDispatch();\n\n  let { data, path, pathUnderMouse } = props;\n  let width = Number(R.last(data.map(R.length).sort()));\n\n  return (\n    <table className={'table json-array-array'}\n      onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n    >\n      <thead>\n        <tr className=\"head\">\n          <th className=\"index-col\">&nbsp;</th>\n          {\n            R.times((i) =>\n              <th align=\"center\" key={i}\n                onMouseOver={createMouseOverHandler(dispatch, path.createArrayAllChildren().createArrayChild(i), pathUnderMouse)}\n              >{i + 1}</th>\n              , width)\n          }\n        </tr>\n      </thead>\n      <tbody>\n        {\n          data.map((row: any, i: number) =>\n            <tr key={i} className={'row ' + (i % 2 === 0 ? 'odd' : 'even')}>\n              <td align=\"right\" valign=\"middle\" className=\"index-col\"\n                onMouseOver={createMouseOverHandler(dispatch, path.createArrayChild(i), pathUnderMouse)}\n              >{i + 1}</td>\n              {\n                R.times((j) => {\n                  let newPath = path.createArrayChild(i).createArrayChild(j);\n                  return (\n                    <td key={j}\n                      onMouseOver={createMouseOverHandler(dispatch, newPath, pathUnderMouse)}\n                    >\n                      <GenericPresenter data={row[j]} path={newPath} pathUnderMouse={pathUnderMouse} />\n                    </td>\n                  );\n                }, width)\n              }\n            </tr>\n          )\n        }\n      </tbody>\n    </table>\n  );\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport GenericPresenter from './GenericPresenter';\nimport { createMouseOverHandler } from './utils';\n\nexport default function ArrayOfLiteralsPresenter(props: any) {\n  const dispatch = useDispatch();\n  let { data, path, pathUnderMouse } = props;\n\n  return (\n    <div className=\"json-literal-array\"\n      onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n    >\n      {\n        data.map((row: any, i: number) =>\n          <GenericPresenter key={i} data={row} path={path.createArrayChild(i)} />\n        )\n      }\n    </div>\n  );\n}","import * as R from 'ramda';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport GenericPresenter from './GenericPresenter';\nimport { createMouseOverHandler } from './utils';\n\nexport default function ArrayOfObjectsPresenter(props: any) {\n  const dispatch = useDispatch();\n\n  let { data, path, pathUnderMouse } = props;\n  let keys = R.uniq(R.flatten(R.map(Object.keys, data)));\n\n  return (\n    <table className=\"table json-object-array\"\n      onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n    >\n      <tbody>\n        <tr className=\"head\">\n          <th className=\"index-col\">&nbsp;</th>\n          {\n            keys.map((key, i) =>\n              <th key={i}\n                onMouseOver={createMouseOverHandler(dispatch, path.createArrayAllChildren().createMapKeyChild(key), pathUnderMouse)}\n              >{key}</th>\n            )\n          }\n        </tr>\n        {\n          data.map((row: any, i: number) =>\n            <tr key={i} className={'row ' + (i % 2 === 0 ? 'odd' : 'even')}\n              onMouseOver={createMouseOverHandler(dispatch, path.createArrayChild(i), pathUnderMouse)}\n            >\n              <td align=\"right\" valign=\"middle\" className=\"index-col\">{i + 1}</td>\n              {\n                keys.map((key, j) => {\n                  let newPath = path.createArrayChild(i).createMapValueChild(key);\n                  return (\n                    <td key={j}\n                      onMouseOver={createMouseOverHandler(dispatch, newPath, pathUnderMouse)}\n                    >\n                      <GenericPresenter data={row[key]} path={newPath} pathUnderMouse={pathUnderMouse} />\n                    </td>\n                  );\n                })\n              }\n            </tr>\n          )\n        }\n      </tbody>\n    </table>\n  );\n}\n","import * as R from 'ramda';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport ArrayOfArraysPresenter from './ArrayOfArraysPresenter';\nimport ArrayOfLiteralsPresenter from './ArrayOfLiteralsPresenter';\nimport ArrayOfObjectsPresenter from './ArrayOfObjectsPresenter';\nimport { createMouseOverHandler } from './utils';\n\nexport default function ArrayPresenter(props: any) {\n  const dispatch = useDispatch();\n\n  let { data, path, pathUnderMouse } = props;\n\n  if (R.isEmpty(data)) {\n    return (\n      <div className=\"json-empty-array\"\n        onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n      >Empty array</div>\n    );\n  } else if (R.is(Array, data[0])) {\n    return (<ArrayOfArraysPresenter data={data} path={path} />);\n  } else if (R.is(Object, data[0])) {\n    return (<ArrayOfObjectsPresenter data={data} path={path} />);\n  } else {\n    return (<ArrayOfLiteralsPresenter data={data} path={path} />);\n  }\n}\n","import * as R from 'ramda';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { show } from './edit-popup/slice';\nimport { selectPathUnderMouse, setPath } from './slice';\nimport { createMouseOverHandler } from './utils';\n\nexport default function LiteralPresenter(props: any) {\n  const dispatch = useDispatch();\n  let pathUnderMouse = useSelector(selectPathUnderMouse);\n\n  const { data, path } = props;\n\n  const editInPopup = () => {\n    dispatch(setPath(path));\n    dispatch(show());\n  }\n\n  if (R.is(Boolean, data)) {\n    return (\n      <div className=\"field\">\n        <input type=\"checkbox\" className=\"switch is-rounded\" checked={data}\n          onChange={() => { }} />\n        <label></label>\n      </div>\n    );\n  } else if (data === null) {\n    return (\n      <div className=\"json-literal json-null\"\n        onDoubleClick={editInPopup}\n        onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n      >\n        null\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"json-literal\"\n        onDoubleClick={editInPopup}\n        onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n      >\n        {data || ''}\n      </div>\n    );\n  }\n}\n","import * as R from 'ramda';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport GenericPresenter from './GenericPresenter';\nimport { createMouseOverHandler } from './utils';\n\nexport default function ObjectPresenter(props: any) {\n  const dispatch = useDispatch();\n\n  let { data, path, pathUnderMouse } = props;\n\n  if (R.isEmpty(data)) {\n    return (\n      <div className=\"json-empty-object\"\n        onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n      >Empty object</div>\n    );\n  }\n\n  return (\n    <table className=\"table is-bordered is-striped json-object\"\n      onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n    >\n      <thead>\n        <tr className=\"head\">\n          <th align=\"right\">&lt;name&gt;</th>\n          <th>&lt;value&gt;</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          Object.keys(data).sort().map((key, i) =>\n            <tr key={key} className={'row ' + (i % 2 === 0 ? 'odd' : 'even')}>\n              <td align=\"right\" valign=\"middle\" className=\"prop-name\"\n                onMouseOver={createMouseOverHandler(dispatch, path.createMapKeyChild(key), pathUnderMouse)}\n              >\n                {key || ''}\n              </td>\n              <td className=\"prop-value\"\n                onMouseOver={createMouseOverHandler(dispatch, path.createMapValueChild(key), pathUnderMouse)}\n              >\n                <GenericPresenter data={data[key]} path={path.createMapValueChild(key)} />\n              </td>\n            </tr>\n          )\n        }\n      </tbody>\n    </table>\n  );\n}\n","import * as R from 'ramda';\nimport React from 'react';\nimport ArrayPresenter from './ArrayPresenter';\nimport LiteralPresenter from './LiteralPresenter';\nimport ObjectPresenter from './ObjectPresenter';\n\nexport default function GenericPresenter(props: any) {\n  const { data } = props;\n\n  if (R.is(Array, data)) {\n    return (<ArrayPresenter {...props} />);\n  } else if (R.is(Object, data)) {\n    return (<ObjectPresenter {...props} />);\n  } else {\n    return (<LiteralPresenter {...props} />);\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\n\nexport enum LayoutOrientation {\n  Vertical = 0,\n  Horizontal = 1,\n}\n\ninterface LayoutState {\n  orientation: LayoutOrientation,\n}\n\nconst initialState: LayoutState = {\n  orientation: LayoutOrientation.Vertical,\n};\n\nexport const STATE_KEY = \"layout\";\n\nexport const slice = createSlice({\n  name: STATE_KEY,\n  initialState,\n  reducers: {\n    changeOrientation(state: any, action: PayloadAction<any>) {\n    },\n  },\n});\n\nexport const {\n  changeOrientation,\n} = slice.actions;\n\nexport const selectOrientation = (state: RootState) => state[STATE_KEY].orientation;\n\nexport default slice.reducer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport JPath from '../../jpath';\nimport { selectEditing } from './edit-popup/slice';\nimport GenericPresenter from './GenericPresenter';\nimport { clearPath } from './slice';\nimport './styles.scss';\n\nexport function JsonRootPresenter({ data }: any) {\n  const dispatch = useDispatch();\n  const editing = useSelector(selectEditing);\n\n  const path = JPath.Root();\n\n  const mouseOutHandler = (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!editing) {\n      dispatch(clearPath());\n    }\n  }\n\n  return (\n    <div className=\"json-root\"\n      onMouseOut={mouseOutHandler}\n    >\n      <GenericPresenter data={data} path={path} />\n    </div>\n  );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.scss';\nimport { RootState } from './app/store';\nimport JsonEditPopup from './features/json-edit/JsonEditPopup';\nimport { JsonRootPresenter } from './features/json-edit/JsonRootPresenter';\nimport { selectData, selectPathUnderMouse, STATE_KEY, updateJson } from './features/json-edit/slice';\nimport { LayoutOrientation, selectOrientation } from './features/layout/slice';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const orientation = useSelector(selectOrientation);\n  const data = useSelector(selectData);\n  const rawData = useSelector((state: RootState) => state[STATE_KEY].rawData);\n\n  let pathUnderMouse: any = useSelector(selectPathUnderMouse);\n  if (pathUnderMouse != null) {\n    pathUnderMouse = pathUnderMouse.toString();\n  }\n\n  let input: any;\n\n  if (orientation === LayoutOrientation.Horizontal) {\n    return <div>TODO</div>;\n  } else {\n    return (\n      <div className=\"App\">\n        <div>\n          Current Path: <span id=\"path\">{pathUnderMouse}</span>\n          <JsonRootPresenter data={data} />\n\n          <button className=\"update\"\n            onClick={() => dispatch(updateJson(input.value))}\n          >Update</button>\n          <br />\n          <textarea className=\"raw-json\" rows={25} cols={100}\n            ref={node => input = node}\n            value={rawData}\n            onChange={event => dispatch(updateJson(event.target.value))} />\n        </div>\n        <JsonEditPopup />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport layoutReducers from '../features/layout/slice';\nimport jsonEditReducers from '../features/json-edit/slice';\nimport editPopupReducers from '../features/json-edit/edit-popup/slice';\n\nexport const store = configureStore({\n  reducer: {\n    layout: layoutReducers,\n    jsonEdit: jsonEditReducers,\n    editPopup: editPopupReducers,\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './app/store';\nimport { updateJson } from './features/json-edit/slice';\nimport './index.scss';\nimport LocationHandler from './utils';\n\nlet rawData = `\n  {\n    \"a\": \"a-value\",\n    \"b\": [\n      {\n        \"first\": \"first value\",\n        \"second\": \"second value\"\n      },\n      {\n        \"first\": \"first value 2\",\n        \"second\": \"second value 2\"\n      },\n      {\n        \"first\": \"first value 3\",\n        \"second\": \"second value 3\",\n        \"third\": \"third value 3\"\n      }\n    ],\n    \"c\": [\n      [\n        \"cell 1-1\",\n        {\n          \"first\": \"first value\",\n          \"second\": \"second value\"\n        }\n      ],\n      [\n        \"cell 2-1\",\n        {\n          \"first\": \"first value\",\n          \"second\": \"second value\"\n        }\n      ]\n    ],\n    \"d\": { \"name\": \"John Doe\", \"age\": 20, \"email\": \"john_doe@company.com\" },\n    \"e\": [ \"Test 1\", \"Test 2\", \"Test 3\" ],\n    \"f\": true,\n    \"g\": [],\n    \"h\": {},\n    \"i\": null\n  }\n`;\n\nconst locationHandler = new LocationHandler();\nif (locationHandler.hasJson) {\n  (async () => {\n    rawData = await locationHandler.getText();\n    store.dispatch(updateJson(rawData));\n  })();\n} else {\n  store.dispatch(updateJson(rawData));\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","const PROXY = \"https://yacdn.org/serve/\";\n\nexport default class LocationHandler {\n  public hasJson: boolean = false;\n  private jsonUrl?: string;\n  public useProxy: boolean = false;\n\n  constructor() {\n    const url = new URL(window.location.toString());\n    const proxy = url.searchParams.get('proxy');\n    this.useProxy = proxy === '1' || proxy === 'true';\n\n    let jsonUrl = url.searchParams.get('json-url');\n    if (jsonUrl) {\n      this.hasJson = true;\n      if (this.useProxy) {\n        jsonUrl = `${PROXY}${jsonUrl}`;\n      }\n      this.jsonUrl = jsonUrl;\n    }\n  }\n\n  public async getText(): Promise<string> {\n    let response = await fetch(decodeURI(this.jsonUrl as string));\n    return response.text();\n  }\n}\n"],"sourceRoot":""}