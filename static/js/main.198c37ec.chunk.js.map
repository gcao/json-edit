{"version":3,"sources":["features/config/ArrayConfig.tsx","features/config/LiteralConfig.tsx","features/config/ObjectConfig.tsx","features/config/GenericConfig.tsx","features/config/Root.tsx","features/json-edit/utils.ts","jpath/index.ts","jconfig/index.ts","features/json-edit/slice.ts","features/json-edit/edit-popup/slice.ts","features/json-edit/edit-popup/index.tsx","features/json-edit/JsonEditPopup.tsx","features/json-edit/ArrayOfArraysView.tsx","features/json-edit/ArrayOfLiteralsView.tsx","features/json-edit/ArrayOfObjectsView.tsx","features/json-edit/ArrayView.tsx","features/json-edit/LiteralView.tsx","features/json-edit/ObjectView.tsx","features/json-edit/GenericView.tsx","features/layout/slice.ts","features/json-edit/JsonRootView.tsx","App.tsx","app/store.ts","index.tsx","utils/index.ts"],"names":["ArrayConfig","children","config","className","GenericConfig","LiteralConfig","label","type","ObjectConfig","props","size","align","Array","from","keys","map","key","i","get","Root","root","createMouseOverHandler","dispatch","path","pathUnderMouse","e","preventDefault","stopPropagation","toString","setPath","PathType","ConfigItem","_props","_children","this","Map","o","toSerializable","forEach","value","JSON","stringify","fromSerializable","Object","entries","set","JConfig","json","fromData","parse","data","dataToConfig","R","length","childConfig","parsed","slice","createSlice","name","initialState","jsonString","reducers","clearPath","state","action","payload","updateJson","updateData","obj","update","updatePropName","actions","selectData","selectConfig","selectJsonString","selectPathUnderMouse","editing","show","hide","selectEditing","EditPopup","title","onSave","useDispatch","useSelector","closeHandler","classNames","onSubmit","aria-label","onClick","JsonEditPopup","input","useEffect","focus","dataToEdit","search","defaultValue","ref","node","JPath","parent","index","ARRAY_ELEMENT","ARRAY_ALL","MAP_KEY","MAP_VALUE","ROOT","target","pathItems","spread","pathItem","Error","newValue","isRoot","parentValue","items","unshift","ArrayOfArraysView","width","Number","sort","onMouseOver","createArrayAllChildren","createArrayChild","row","valign","j","newPath","GenericView","ArrayOfLiteralsView","ArrayOfObjectsView","createMapKeyChild","createMapValueChild","ArrayView","LiteralView","editInPopup","Boolean","checked","onChange","onDoubleClick","ObjectView","LayoutOrientation","JsonRootView","onMouseOut","App","id","split","rows","cols","event","orientation","Vertical","changeOrientation","store","configureStore","reducer","layout","layoutReducers","jsonEdit","jsonEditReducers","editPopup","editPopupReducers","middleware","getDefaultMiddleware","serializableCheck","locationHandler","hasJson","jsonUrl","useProxy","url","URL","window","location","proxy","searchParams","fetch","decodeURI","response","text","a","getText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAIe,SAASA,EAAT,GAA0D,IACnEC,EADkE,EAAlCC,OACdD,SAEtB,OACE,yBAAKE,UAAU,qBACb,uBAAGA,UAAU,wBAAb,YACA,kBAACC,EAAD,CAAeF,OAAQD,KCPd,SAASI,EAAT,GAAkD,IAAzBH,EAAwB,EAAxBA,OAClCI,EAAQ,UAYZ,MAVoB,WAAhBJ,EAAOK,KACTD,EAAQ,SACiB,WAAhBJ,EAAOK,KAChBD,EAAQ,SACiB,YAAhBJ,EAAOK,KAChBD,EAAQ,UACiB,QAAhBJ,EAAOK,OAChBD,EAAQ,OAIR,yBAAKH,UAAU,uBACb,6BAAMG,ICdG,SAASE,EAAT,GAAiD,IAAzBN,EAAwB,EAAxBA,OACrC,OAA0B,IAAtBA,EAAOO,MAAMC,KACR,uBAAGP,UAAU,cAAb,UAGP,2BAAOA,UAAU,uCACf,+BACE,wBAAIA,UAAU,QACZ,wBAAIQ,MAAM,SAAV,UACA,yCAGJ,+BAEIC,MAAMC,KAAKX,EAAOO,MAAMK,QAAQC,KAAI,SAACC,EAAKC,GAAN,OAClC,wBAAID,IAAKC,EAAGd,UAAW,QAAUc,EAAI,IAAM,EAAI,MAAQ,SACrD,wBAAId,UAAU,OAAOa,GACrB,wBAAIb,UAAU,SACZ,kBAACC,EAAD,CAAeF,OAAQA,EAAOO,MAAMS,IAAIF,YCZzC,SAASZ,EAAT,GAAkD,IAAzBF,EAAwB,EAAxBA,OACtC,MAAoB,UAAhBA,EAAOK,KAEP,kBAACP,EAAD,CAAaE,OAAQA,IAEE,WAAhBA,EAAOK,KAEd,kBAACC,EAAD,CAAcN,OAAQA,IAItB,kBAACG,EAAD,CAAeH,OAAQA,ICZd,SAASiB,EAAT,GAAsC,IAAtBjB,EAAqB,EAArBA,OAC7B,OACE,yBAAKC,UAAU,oBACb,kBAACC,EAAD,CAAeF,OAAQA,EAAOkB,Q,WCN7B,SAASC,EAAuBC,EAAeC,EAAWC,GAC/D,OAAO,SAACC,GACNA,EAAEC,iBACFD,EAAEE,kBACGH,GAAkBD,EAAKK,aAAeJ,EAAeI,YACxDN,EAASO,EAAQN,K,ICTXO,E,gCCkECC,EAAb,WAmBE,aAAe,yBAlBRxB,UAkBO,OAjBdyB,YAiBc,OAhBdC,eAgBc,EACZC,KAAK3B,KAAO,MApBhB,kDASI,OAHK2B,KAAKF,SACRE,KAAKF,OAAS,IAAIG,KAEbD,KAAKF,SAThB,+BAgBI,OAHKE,KAAKD,YACRC,KAAKD,UAAY,IAAIF,GAEhBG,KAAKD,cAhBhB,sDA2BI,IAAIG,EAAS,GAUb,OATAA,EAAE7B,KAAO2B,KAAK3B,KACC,UAAX6B,EAAE7B,KACJ6B,EAAEnC,SAAWiC,KAAKjC,SAASoC,iBACP,WAAXD,EAAE7B,OACX6B,EAAE3B,MAAQ,GACVyB,KAAKzB,MAAM6B,SAAQ,SAACC,EAAOvB,GACzBoB,EAAE3B,MAAMO,GAAOuB,EAAMF,qBAGlBD,IArCX,iCAyCI,OAAOI,KAAKC,UAAUP,KAAKG,iBAAkB,KAAM,MAzCvD,wCAiD0BD,GACtB,IAAIlC,EAAS,IAAI6B,EAEjB,GADA7B,EAAOK,KAAO6B,EAAE7B,KACD,UAAX6B,EAAE7B,KACJL,EAAO+B,UAAYC,KAAKQ,iBAAiBN,EAAEnC,eACtC,GAAe,WAAXmC,EAAE7B,KAAmB,CAC9BL,EAAO8B,OAAS,IAAIG,IACpB,cAAyBQ,OAAOC,QAAQR,EAAE3B,OAA1C,eAAkD,CAAC,IAAD,sBAAxCO,EAAwC,KAAnCuB,EAAmC,KAChDrC,EAAO8B,OAAOa,IAAI7B,EAAKkB,KAAKQ,iBAAiBH,KAGjD,OAAOrC,MA5DX,KAgEqB4C,E,WAGnB,aAAe,yBAFR1B,UAEO,EACZc,KAAKd,KAAO,IAAIW,E,uDAIhB,IAAIK,EAAS,GAEb,OADAA,EAAEhB,KAAOc,KAAKd,KAAKiB,iBACZG,KAAKC,UAAUL,EAAG,KAAM,M,gCAGVW,GACrB,OAAOb,KAAKc,SAASR,KAAKS,MAAMF,M,+BAGXG,GACrB,IAAMhD,EAAS,IAAI4C,EAEnB,OADAZ,KAAKiB,aAAaD,EAAMhD,EAAOkB,MACxBlB,I,mCAGmBgD,EAAWhD,GAGrC,GAFAA,EAAOK,KAAO6C,IAAKxC,MAAOsC,GAAQ,eAAkBA,EAEhC,UAAhBhD,EAAOK,KACL2C,EAAKG,OAAS,IAChBnB,KAAKiB,aAAaD,EAAK,GAAIhD,EAAOD,UAC9BC,EAAOD,SAASM,WAIjB,GAAI2C,GAAwB,WAAhBhD,EAAOK,KACxB,cAAyBoC,OAAOC,QAAQM,GAAxC,eAA+C,CAAC,IAAD,sBAArClC,EAAqC,KAAhCuB,EAAgC,KACzCe,EAAc,IAAIvB,EACtB7B,EAAOO,MAAMoC,IAAI7B,EAAKsC,GACtBpB,KAAKiB,aAAaZ,EAAOe,M,kCAKLP,GACxB,IAAI7C,EAAS,IAAI4C,EACbS,EAASf,KAAKS,MAAMF,GAExB,OADA7C,EAAOkB,KAAOW,EAAWW,iBAAiBa,EAAOnC,MAC1ClB,M,KC9JEsD,EAAQC,YAAY,CAC/BC,KAHuB,WAIvBC,aATkC,CAClCC,WAAY,OACZV,KAAM,MAQNW,SAAU,CACRC,UADQ,SACEC,GACRA,EAAMvC,eAAiB,MAEzBK,QAJQ,SAIAkC,EAAYC,GAClBD,EAAMvC,eAAiBwC,EAAOC,SAEhCC,WAPQ,SAOGH,EAAYC,GACrBD,EAAMH,WAAaI,EAAOC,QAC1BF,EAAMb,KAAOV,KAAKS,MAAMe,EAAOC,SAC/BF,EAAM7D,OAAS4C,EAAQE,SAASe,EAAMb,OAExCiB,WAZQ,SAYGJ,EAAYC,GAA6B,IHjC9BI,EGiC6B,EAC3BJ,EAAOC,QAAvB1C,EAD2C,EAC3CA,KAAMgB,EADqC,EACrCA,MACZwB,EAAMb,KAAO3B,EAAK8C,OAAON,EAAMb,KAAMX,GACrCwB,EAAM7D,OAAS4C,EAAQE,SAASe,EAAMb,MACtCa,EAAMH,YHrCcQ,EGqCSL,EAAMb,KHpChCV,KAAKC,UAAU2B,EAAK,KAAM,KGsC/BE,eAlBQ,SAkBOP,EAAYC,Q,EAuB3BR,EAAMe,QALRT,E,EAAAA,UACAjC,E,EAAAA,QACAqC,E,EAAAA,WACAC,E,EAAAA,WAIWK,G,EAHXF,eAGwB,SAACP,GAAD,OAAsBA,EAAK,SAAYb,OACpDuB,EAAe,SAACV,GAAD,OAAsBA,EAAK,SAAY7D,QACtDwE,EAAmB,SAACX,GAAD,OAAsBA,EAAK,SAAYH,YAC1De,EAAuB,SAACZ,GAAD,OAAsBA,EAAK,SAAYvC,gBAE5DgC,IAAf,Q,iBC1DaA,EAAQC,YAAY,CAC/BC,KAHuB,YAIvBC,aARmC,CACnCiB,SAAS,GAQTf,SAAU,CACRgB,KADQ,SACHd,GACHA,EAAMa,SAAU,GAElBE,KAJQ,SAIHf,GACHA,EAAMa,SAAU,M,EAKQpB,EAAMe,QAArBM,E,EAAAA,KAAMC,E,EAAAA,KAERC,EAAgB,SAAChB,GAAD,OAAsBA,EAAK,UAAYa,SAErDpB,IAAf,QCzBe,SAASwB,EAAT,GAAoD,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,OAAQjF,EAAgB,EAAhBA,SAC1CqB,EAAW6D,cACXP,EAAUQ,YAAYL,GAEtBM,EAAe,WACnB/D,EAASwD,MAOX,OACE,yBAAK3E,UAAWmF,IAAW,QAAS,CAAC,YAAaV,KAChD,0BAAMW,SAPU,WAClBjE,EAASwD,KACTI,MAMI,yBAAK/E,UAAU,qBACf,yBAAKA,UAAU,cACb,4BAAQA,UAAU,mBAChB,uBAAGA,UAAU,oBAAoB8E,GACjC,4BAAQ9E,UAAU,SAASqF,aAAW,QAAQC,QAASJ,KAEzD,6BAASlF,UAAU,mBAChBF,GAEH,4BAAQE,UAAU,mBAChB,4BAAQI,KAAK,SAASJ,UAAU,qBAAhC,gBACA,4BAAQI,KAAK,SAASJ,UAAU,SAASsF,QAASJ,GAAlD,cCzBG,SAASK,IACtB,IAIIC,EAJErE,EAAW6D,cACbP,EAAUQ,YAAYL,GACtB7B,EAAOkC,YAAYZ,GACnBhD,EAAiB4D,YAAYT,GAQjC,GANAiB,qBAAU,WACJD,GACFA,EAAME,YAILjB,EACH,OAAO,KAGT,IAAIkB,EAAU,OAAGtE,QAAH,IAAGA,OAAH,EAAGA,EAAgBuE,OAAO7C,GAKxC,OACE,kBAAC8B,EAAD,CAAWC,MAAM,OAAOC,OALN,WAClB5D,EAAS6C,EAAW,CAAE5C,KAAMC,EAAgBe,MAAOoD,EAAMpD,WAKvD,yBAAKpC,UAAU,SACb,2BAAOA,UAAU,SAAjB,cACA,yBAAKA,UAAU,WACb,2BAAOA,UAAU,QAAQI,KAAK,OAAOyF,aAAcF,EACjDG,IAAK,SAAAC,GAAI,OAAIP,EAAQO,S,SL/BrBpE,O,eAAAA,I,iCAAAA,I,qBAAAA,I,yBAAAA,I,0BAAAA,M,SAQSqE,E,WAInB,WAA2BC,EAA6B7F,GAAiB,yBAA9C6F,SAA6C,KAAhB7F,OAAgB,KAHjE8F,WAGiE,OAFjErF,SAEiE,E,6DAOhDqF,GACtB,IAAI9E,EAAO,IAAI4E,EAAMjE,KAAMJ,EAASwE,eAEpC,OADA/E,EAAK8E,MAAQA,EACN9E,I,+CAKP,OADW,IAAI4E,EAAMjE,KAAMJ,EAASyE,a,wCAIbvF,GACvB,IAAIO,EAAO,IAAI4E,EAAMjE,KAAMJ,EAAS0E,SAEpC,OADAjF,EAAKP,IAAMA,EACJO,I,0CAGkBP,GACzB,IAAIO,EAAO,IAAI4E,EAAMjE,KAAMJ,EAAS2E,WAEpC,OADAlF,EAAKP,IAAMA,EACJO,I,+BAIP,OAAOW,KAAK3B,OAASuB,EAAS4E,O,6BAQlBC,GAEZ,IADA,IAAIC,EAAY1E,KAAK2E,SACZ5F,EAAI,EAAGA,EAAI2F,EAAUvD,OAAQpC,IAAK,CACzC,IAAI6F,EAAWF,EAAU3F,GACzB,OAAQ6F,EAASvG,MACf,KAAKuB,EAASwE,cACZ,IAAIlD,IAAKxC,MAAO+F,GAGd,OAFAA,EAASA,EAAOG,EAAST,OAI3B,MAEF,KAAKvE,EAAS0E,QACZ,IAAIpD,IAAKT,OAAQgE,GAGf,OAFAA,EAASG,EAAS9F,IAIpB,MAEF,KAAKc,EAAS2E,UACZ,IAAIrD,IAAKT,OAAQgE,GAGf,OAFAA,EAASA,EAAOG,EAAS9F,KAI3B,MAEF,KAAKc,EAASyE,UACZ,MAAM,IAAIQ,MAAM,0DAItB,OAAOJ,I,6BAUKA,EAAaK,GACzB,GAAI9E,KAAK+E,SACP,OAAOD,EAGT,IAAIE,EAAehF,KAAKkE,OAAiBL,OAAOY,GAChD,OAAQzE,KAAK3B,MACX,KAAKuB,EAASwE,cACZ,IAAIlD,IAAKxC,MAAOsG,GAGd,MAAM,IAAIH,MAAM,qEAFhBG,EAAYhF,KAAKmE,OAAmBW,EAItC,MAEF,KAAKlF,EAAS2E,UACZ,IAAIrD,IAAKT,OAAQuE,GAGf,MAAM,IAAIH,MAAM,kEAFhBG,EAAYhF,KAAKlB,KAAiBgG,EAIpC,MAEF,QACE,MAAM,IAAID,MAAJ,sDAAyDjF,EAASI,KAAK3B,QAGjF,OAAOoG,I,iCAGkB,IAAD,MACxB,OAAQzE,KAAK3B,MACX,KAAKuB,EAAS4E,KACZ,MAAO,OACT,KAAK5E,EAASwE,cACZ,MAAM,GAAN,iBAAUpE,KAAKkE,cAAf,aAAU,EAAaxE,WAAvB,YAAqCM,KAAKmE,MAA1C,KACF,KAAKvE,EAASyE,UACZ,MAAM,GAAN,iBAAUrE,KAAKkE,cAAf,aAAU,EAAaxE,WAAvB,OACF,KAAKE,EAAS0E,QACd,KAAK1E,EAAS2E,UACZ,MAAM,GAAN,iBAAUvE,KAAKkE,cAAf,aAAU,EAAaxE,WAAvB,aAAsCM,KAAKlB,IAA3C,S,+BAOJ,IAFA,IAAImG,EAAiB,GACjB5F,EAAcW,KACF,OAATX,GACL4F,EAAMC,QAAQ7F,GACdA,EAAOA,EAAK6E,OAEd,OAAOe,K,8BAlIP,OAAO,IAAIhB,EAAM,KAAMrE,EAAS4E,U,yCMZrB,SAASW,EAAkB5G,GACxC,IAAMa,EAAW6D,cAEXjC,EAA+BzC,EAA/ByC,KAAM3B,EAAyBd,EAAzBc,KAAMC,EAAmBf,EAAnBe,eACd8F,EAAQC,OAAOnE,IAAOF,EAAKnC,IAAIqC,KAAUoE,SAE7C,OACE,2BAAOrH,UAAU,gDACfsH,YAAapG,EAAuBC,EAAUC,EAAMC,IAEpD,+BACE,wBAAIrB,UAAU,QACZ,wBAAIA,UAAU,aAAd,QAEEiD,KAAQ,SAACnC,GAAD,OACN,wBAAIN,MAAM,SAASK,IAAKC,EACtBwG,YAAapG,EAAuBC,EAAUC,EAAKmG,yBAAyBC,iBAAiB1G,GAAIO,IACjGP,EAAI,KACJqG,KAIV,+BAEIpE,EAAKnC,KAAI,SAAC6G,EAAU3G,GAAX,OACP,wBAAID,IAAKC,EAAGd,UAAW,QAAUc,EAAI,IAAM,EAAI,MAAQ,SACrD,wBAAIN,MAAM,QAAQkH,OAAO,SAAS1H,UAAU,YAC1CsH,YAAapG,EAAuBC,EAAUC,EAAKoG,iBAAiB1G,GAAIO,IACxEP,EAAI,GAEJmC,KAAQ,SAAC0E,GACP,IAAIC,EAAUxG,EAAKoG,iBAAiB1G,GAAG0G,iBAAiBG,GACxD,OACE,wBAAI9G,IAAK8G,EACPL,YAAapG,EAAuBC,EAAUyG,EAASvG,IAEvD,kBAACwG,GAAD,CAAa9E,KAAM0E,EAAIE,GAAIvG,KAAMwG,EAASvG,eAAgBA,OAG7D8F,SCxCJ,SAASW,GAAoBxH,GAC1C,IAAMa,EAAW6D,cACXjC,EAA+BzC,EAA/ByC,KAAM3B,EAAyBd,EAAzBc,KAAMC,EAAmBf,EAAnBe,eAElB,OACE,yBAAKrB,UAAU,qBACbsH,YAAapG,EAAuBC,EAAUC,EAAMC,IAGlD0B,EAAKnC,KAAI,SAAC6G,EAAU3G,GAAX,OACP,kBAAC+G,GAAD,CAAahH,IAAKC,EAAGiC,KAAM0E,EAAKrG,KAAMA,EAAKoG,iBAAiB1G,S,kCCTvD,SAASiH,GAAmBzH,GACzC,IAAMa,EAAW6D,cAEXjC,EAA+BzC,EAA/ByC,KAAM3B,EAAyBd,EAAzBc,KAAMC,EAAmBf,EAAnBe,eACdV,EAAOsC,KAAOA,KAAUA,KAAMT,OAAO7B,KAAMoC,KAE/C,OACE,2BAAO/C,UAAU,iDACfsH,YAAapG,EAAuBC,EAAUC,EAAMC,IAEpD,2BAAOrB,UAAU,QACf,4BACE,wBAAIA,UAAU,aAAd,QAEEW,EAAKC,KAAI,SAACC,EAAKC,GAAN,OACP,wBAAID,IAAKC,EACPwG,YAAapG,EAAuBC,EAAUC,EAAKmG,yBAAyBS,kBAAkBnH,GAAMQ,IACpGR,QAKV,+BAEIkC,EAAKnC,KAAI,SAAC6G,EAAU3G,GAAX,OACP,wBAAID,IAAKC,EAAGd,UAAW,QAAUc,EAAI,IAAM,EAAI,MAAQ,QACrDwG,YAAapG,EAAuBC,EAAUC,EAAKoG,iBAAiB1G,GAAIO,IAExE,wBAAIb,MAAM,QAAQkH,OAAO,SAAS1H,UAAU,aAAac,EAAI,GAE3DH,EAAKC,KAAI,SAACC,EAAK8G,GACb,IAAIC,EAAUxG,EAAKoG,iBAAiB1G,GAAGmH,oBAAoBpH,GAC3D,OACE,wBAAIA,IAAK8G,EACPL,YAAapG,EAAuBC,EAAUyG,EAASvG,IAEvD,kBAACwG,GAAD,CAAa9E,KAAM0E,EAAI5G,GAAMO,KAAMwG,EAASvG,eAAgBA,cClCnE,SAAS6G,GAAU5H,GAChC,IAAMa,EAAW6D,cAEXjC,EAA+BzC,EAA/ByC,KAAM3B,EAAyBd,EAAzBc,KAAMC,EAAmBf,EAAnBe,eAElB,OAAI4B,IAAUF,GAEV,yBAAK/C,UAAU,mBACbsH,YAAapG,EAAuBC,EAAUC,EAAMC,IADtD,eAIO4B,IAAKxC,MAAOsC,EAAK,IAClB,kBAACmE,EAAD,CAAmBnE,KAAMA,EAAM3B,KAAMA,IACpC6B,IAAKT,OAAQO,EAAK,IACnB,kBAACgF,GAAD,CAAoBhF,KAAMA,EAAM3B,KAAMA,IAEtC,kBAAC0G,GAAD,CAAqB/E,KAAMA,EAAM3B,KAAMA,ICjBpC,SAAS+G,GAAY7H,GAClC,IAAMa,EAAW6D,cACb3D,EAAiB4D,YAAYT,GAEzBzB,EAAezC,EAAfyC,KAAM3B,EAASd,EAATc,KAERgH,EAAc,WAClBjH,EAASO,EAAQN,IACjBD,EAASuD,MAGX,OAAIzB,IAAKoF,QAAStF,GAEd,yBAAK/C,UAAU,SACb,2BAAOI,KAAK,WAAWJ,UAAU,oBAAoBsI,QAASvF,EAC5DwF,SAAU,eACZ,iCAGc,OAATxF,EAEP,yBAAK/C,UAAU,yBACbwI,cAAeJ,EACfd,YAAapG,EAAuBC,EAAUC,EAAMC,IAFtD,QASA,yBAAKrB,UAAU,eACbwI,cAAeJ,EACfd,YAAapG,EAAuBC,EAAUC,EAAMC,IAEnD0B,GAAQ,ICnCF,SAAS0F,GAAWnI,GACjC,IAAMa,EAAW6D,cAEXjC,EAA+BzC,EAA/ByC,KAAM3B,EAAyBd,EAAzBc,KAAMC,EAAmBf,EAAnBe,eAElB,OAAI4B,IAAUF,GAEV,yBAAK/C,UAAU,oBACbsH,YAAapG,EAAuBC,EAAUC,EAAMC,IADtD,gBAOF,2BAAOrB,UAAU,2CACfsH,YAAapG,EAAuBC,EAAUC,EAAMC,IAEpD,+BACE,wBAAIrB,UAAU,QACZ,wBAAIQ,MAAM,SAAV,UACA,yCAGJ,+BAEIgC,OAAO7B,KAAKoC,GAAMsE,OAAOzG,KAAI,SAACC,EAAKC,GAAN,OAC3B,wBAAID,IAAKA,EAAKb,UAAW,QAAUc,EAAI,IAAM,EAAI,MAAQ,SACvD,wBAAIN,MAAM,QAAQkH,OAAO,SAAS1H,UAAU,YAC1CsH,YAAapG,EAAuBC,EAAUC,EAAK4G,kBAAkBnH,GAAMQ,IAE1ER,GAAO,IAEV,wBAAIb,UAAU,aACZsH,YAAapG,EAAuBC,EAAUC,EAAK6G,oBAAoBpH,GAAMQ,IAE7E,kBAACwG,GAAD,CAAa9E,KAAMA,EAAKlC,GAAMO,KAAMA,EAAK6G,oBAAoBpH,YCnC9D,SAASgH,GAAYvH,GAAa,IACvCyC,EAASzC,EAATyC,KAER,OAAIE,IAAKxC,MAAOsC,GACN,kBAACmF,GAAc5H,GACd2C,IAAKT,OAAQO,GACd,kBAAC0F,GAAenI,GAEhB,kBAAC6H,GAAgB7H,G,ICXjBoI,G,OCKL,SAASC,GAAT,GAAsC,IAAd5F,EAAa,EAAbA,KACvB5B,EAAW6D,cACXP,EAAUQ,YAAYL,GAEtBxD,EAAO4E,EAAMhF,OAUnB,OACE,yBAAKhB,UAAU,YACb4I,WAVoB,SAACtH,GACvBA,EAAEC,iBACFD,EAAEE,kBACGiD,GACHtD,EAASwC,OAQT,kBAACkE,GAAD,CAAa9E,KAAMA,EAAM3B,KAAMA,KChBtB,SAASyH,KACtB,IAUIrD,EAVErE,EAAW6D,cACXjC,EAAOkC,YAAYZ,GACnBtE,EAASkF,YAAYX,GACrBb,EAAawB,YAAYV,GAE3BlD,EAAsB4D,YAAYT,GAOtC,OANsB,MAAlBnD,IACFA,EAAiBA,EAAeI,YAMhC,yBAAKzB,UAAU,OACb,8CACgB,0BAAM8I,GAAG,QAAQzH,GAC/B,kBAAC,IAAD,CAAW0H,MAAM,YACf,kBAACJ,GAAD,CAAc5F,KAAMA,IAElBhD,EAAS,kBAACiB,EAAD,CAAMjB,OAAQA,IAAa,IAIxC,4BAAQC,UAAU,SAChBsF,QAAS,kBAAMnE,EAAS4C,EAAWyB,EAAMpD,UAD3C,UAGA,6BACA,8BAAUpC,UAAU,WAAWgJ,KAAM,GAAIC,KAAM,IAC7CnD,IAAK,SAAAC,GAAI,OAAIP,EAAQO,GACrB3D,MAAOqB,EACP8E,SAAU,SAAAW,GAAK,OAAI/H,EAAS4C,EAAWmF,EAAM1C,OAAOpE,YAExD,kBAACmD,EAAD,Q,SFxCMmD,O,uBAAAA,I,4BAAAA,Q,KASZ,IAAMlF,GAA4B,CAChC2F,YAAaT,GAAkBU,UAKpB/F,GAAQC,YAAY,CAC/BC,KAHuB,SAIvBC,gBACAE,SAAU,CACR2F,kBADQ,SACUzF,EAAYC,QAWnBR,IAJXA,GAAMe,QADRiF,kBAKahG,GAAf,SG5BaiG,GAAQC,YAAe,CAClCC,QAAS,CACPC,OAAQC,GACRC,SAAUC,EACVC,UAAWC,GAEbC,WAAYC,YAAqB,CAC/BC,mBAAmB,MCHnBxG,I,OAAU,uzBA2CRyG,GAAkB,I,WC7CtB,aAAe,yBAJRC,SAAmB,EAIZ,KAHNC,aAGM,OAFPC,UAAoB,EAGzB,IAAMC,EAAM,IAAIC,IAAIC,OAAOC,SAAShJ,YAC9BiJ,EAAQJ,EAAIK,aAAa5J,IAAI,SACnCgB,KAAKsI,SAAqB,MAAVK,GAA2B,SAAVA,EAEjC,IAAIN,EAAUE,EAAIK,aAAa5J,IAAI,YAC/BqJ,IACFrI,KAAKoI,SAAU,EACXpI,KAAKsI,WACPD,EAAO,UAhBD,4BAgBC,OAAcA,IAEvBrI,KAAKqI,QAAUA,G,sLAKIQ,MAAMC,UAAU9I,KAAKqI,U,cAAtCU,E,yBACGA,EAASC,Q,8GD6BhBb,GAAgBC,QAClB,sBAAC,sBAAAa,EAAA,sEACoBd,GAAgBe,UADpC,OACCxH,GADD,OAEC6F,GAAMnI,SAAS4C,EAAWN,KAF3B,0CAAD,GAKA6F,GAAMnI,SAAS4C,EAAWN,KAG5ByH,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAU9B,MAAOA,IACf,kBAAC,GAAD,QAGJ+B,SAASC,eAAe,U","file":"static/js/main.198c37ec.chunk.js","sourcesContent":["import React from 'react';\nimport { ConfigItem } from 'src/jconfig';\nimport GenericConfig from './GenericConfig';\n\nexport default function ArrayConfig({ config }: { config: ConfigItem }) {\n  let children = config.children;\n\n  return (\n    <div className=\"json-config array\">\n      <p className=\"title is-5 json-type\">Array of</p>\n      <GenericConfig config={children} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { GenericProps } from './GenericConfig';\n\nexport default function LiteralConfig({ config }: GenericProps) {\n  let label = \"Literal\";\n\n  if (config.type === \"string\") {\n    label = \"String\";\n  } else if (config.type === \"number\") {\n    label = \"Number\";\n  } else if (config.type === \"boolean\") {\n    label = \"Boolean\";\n  } else if (config.type === \"any\") {\n    label = \"Any\";\n  }\n\n  return (\n    <div className=\"json-config literal\">\n      <div>{label}</div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { ConfigItem } from 'src/jconfig';\nimport GenericConfig, { GenericProps } from './GenericConfig';\n\nexport default function ObjectConfig({ config }: GenericProps) {\n  if (config.props.size === 0) {\n    return <p className=\"title is-4\">Object</p>;\n  }\n  return (\n    <table className=\"table is-bordered is-striped object\">\n      <thead>\n        <tr className=\"head\">\n          <th align=\"right\">&lt;name&gt;</th>\n          <th>&lt;value&gt;</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          Array.from(config.props.keys()).map((key, i) => (\n            <tr key={i} className={'row ' + (i % 2 === 0 ? 'odd' : 'even')}>\n              <td className=\"key\">{key}</td>\n              <td className=\"value\">\n                <GenericConfig config={config.props.get(key) as ConfigItem} />\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n}\n","import React from 'react';\nimport { ConfigItem } from 'src/jconfig';\nimport ArrayConfig from './ArrayConfig';\nimport LiteralConfig from './LiteralConfig';\nimport ObjectConfig from './ObjectConfig';\n\nexport interface GenericProps {\n  config: ConfigItem,\n}\n\nexport default function GenericConfig({ config }: GenericProps) {\n  if (config.type === \"array\") {\n    return (\n      <ArrayConfig config={config} />\n    );\n  } else if (config.type === \"object\") {\n    return (\n      <ObjectConfig config={config} />\n    );\n  } else {\n    return (\n      <LiteralConfig config={config} />\n    );\n  }\n}\n","import React from 'react';\nimport JConfig from 'src/jconfig';\nimport './index.scss';\nimport GenericConfig from './GenericConfig';\n\ninterface RootProps {\n  config: JConfig,\n}\n\nexport default function Root({ config }: RootProps) {\n  return (\n    <div className=\"json-config root\">\n      <GenericConfig config={config.root} />\n    </div>\n  );\n}\n","import { setPath } from './slice';\n\nexport function stringify(obj: any) {\n  return JSON.stringify(obj, null, 2);\n}\n\nexport function createMouseOverHandler(dispatch: any, path: any, pathUnderMouse: any) {\n  return (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!pathUnderMouse || path.toString() !== pathUnderMouse.toString()) {\n      dispatch(setPath(path));\n    }\n  };\n}","import * as R from \"ramda\";\n\nexport enum PathType {\n  ROOT = 0,\n  ARRAY_ELEMENT = 1,\n  MAP_KEY = 2,\n  MAP_VALUE = 3,\n  ARRAY_ALL = 4, // match all child elements of an array\n}\n\nexport default class JPath {\n  public index?: number;\n  public key?: String;\n\n  private constructor(public parent: JPath | null, public type: PathType) {\n  }\n\n  public static Root(): JPath {\n    return new JPath(null, PathType.ROOT);\n  }\n\n  public createArrayChild(index: number): JPath {\n    let path = new JPath(this, PathType.ARRAY_ELEMENT);\n    path.index = index;\n    return path;\n  }\n\n  public createArrayAllChildren(): JPath {\n    let path = new JPath(this, PathType.ARRAY_ALL);\n    return path;\n  }\n\n  public createMapKeyChild(key: string): JPath {\n    let path = new JPath(this, PathType.MAP_KEY);\n    path.key = key;\n    return path;\n  }\n\n  public createMapValueChild(key: string): JPath {\n    let path = new JPath(this, PathType.MAP_VALUE);\n    path.key = key;\n    return path;\n  }\n\n  public isRoot(): boolean {\n    return this.type === PathType.ROOT;\n  }\n\n  /**\n   * Search matching part in target\n   *\n   * @param target target JSON value\n   */\n  public search(target: any): any {\n    let pathItems = this.spread();\n    for (let i = 0; i < pathItems.length; i++) {\n      let pathItem = pathItems[i];\n      switch (pathItem.type) {\n        case PathType.ARRAY_ELEMENT:\n          if (R.is(Array, target)) {\n            target = target[pathItem.index as number];\n          } else {\n            return;\n          }\n          break;\n\n        case PathType.MAP_KEY:\n          if (R.is(Object, target)) {\n            target = pathItem.key;\n          } else {\n            return;\n          }\n          break;\n\n        case PathType.MAP_VALUE:\n          if (R.is(Object, target)) {\n            target = target[pathItem.key as string];\n          } else {\n            return;\n          }\n          break;\n\n        case PathType.ARRAY_ALL:\n          throw new Error(\"JPath search error: unsupported path type - ARRAY_ALL\");\n      }\n    }\n\n    return target;\n  }\n\n  /**\n   * @param target root JSON value\n   * @param newValue new value to replace the matched part\n   *\n   * @returns whole object with matching part replaced with newValue\n   *          if the path matches the root value, then return newValue directly\n   */\n  public update(target: any, newValue: any): any {\n    if (this.isRoot()) {\n      return newValue;\n    }\n\n    let parentValue = (this.parent as JPath).search(target);\n    switch (this.type) {\n      case PathType.ARRAY_ELEMENT:\n        if (R.is(Array, parentValue)) {\n          parentValue[this.index as number] = newValue;\n        } else {\n          throw new Error(\"JPath update error: ARRAY_ELEMENT can only be applied on an array\");\n        }\n        break;\n\n      case PathType.MAP_VALUE:\n        if (R.is(Object, parentValue)) {\n          parentValue[this.key as string] = newValue;\n        } else {\n          throw new Error(\"JPath update error: MAP_VALUE can only be applied on an object\");\n        }\n        break;\n\n      default:\n        throw new Error(`JPath update error: unsupported path type - ${PathType[this.type]}`);\n    }\n\n    return target;\n  }\n\n  public toString(): string {\n    switch (this.type) {\n      case PathType.ROOT:\n        return \"root\";\n      case PathType.ARRAY_ELEMENT:\n        return `${this.parent?.toString()}[${this.index}]`;\n      case PathType.ARRAY_ALL:\n        return `${this.parent?.toString()}[*]`;\n      case PathType.MAP_KEY:\n      case PathType.MAP_VALUE:\n        return `${this.parent?.toString()}[\"${this.key}\"]`;\n    }\n  }\n\n  private spread(): JPath[] {\n    let items: JPath[] = [];\n    let path: JPath = this;\n    while (path !== null) {\n      items.unshift(path);\n      path = path.parent as JPath;\n    }\n    return items;\n  }\n}\n","import * as R from \"ramda\";\n\n// export interface IConfig {\n//   required: boolean;\n//   toString(): string;\n// }\n\n// export abstract class Config implements IConfig {\n//   public required: boolean = false;\n\n//   toString(): string {\n//     throw new Error(\"Method not implemented.\");\n//   }\n// }\n\n// export class AnyConfig extends Config {\n// }\n\n// /**\n//  * Allow specified properties only\n//  */\n// export class ObjectConfig extends Config {\n// }\n\n// /**\n//  * Allows property with any name\n//  */\n// export class GenericObjectConfig extends Config {\n// }\n\n// /**\n//  * All items should have the same type.\n//  * If it includes different type of items, the children's type should be\n//  * considered Any.\n//  */\n// export class ArrayConfig extends Config {\n// }\n\n// /**\n//  * Fixed length array that allows different type of items\n//  */\n// export class TupleConfig extends Config {\n// }\n\n// export class SingleChoiceConfig extends Config {\n// }\n\n// export class MultiChoicesConfig extends Config {\n// }\n\n// export class BooleanConfig extends Config {\n// }\n\n// export class StringConfig extends Config {\n// }\n\n// export class NumberConfig extends Config {\n// }\n\n// export class DateConfig extends Config {\n// }\n\n// export class DateTimeConfig extends Config {\n// }\n\n// export class ColorConfig extends Config {\n// }\n\nexport class ConfigItem {\n  public type: string;\n  _props?: Map<string, ConfigItem>;\n  _children?: ConfigItem;\n\n  get props() {\n    if (!this._props) {\n      this._props = new Map();\n    }\n    return this._props;\n  }\n\n  get children(): ConfigItem {\n    if (!this._children) {\n      this._children = new ConfigItem();\n    }\n    return this._children;\n  }\n\n  constructor() {\n    this.type = \"any\";\n  }\n\n  /**\n   * Return an object that can be serialized using JSON.stringify\n   */\n  toSerializable(): any {\n    let o: any = {};\n    o.type = this.type;\n    if (o.type === \"array\") {\n      o.children = this.children.toSerializable();\n    } else if (o.type === \"object\") {\n      o.props = {};\n      this.props.forEach((value, key) => {\n        o.props[key] = value.toSerializable();\n      });\n    }\n    return o;\n  }\n\n  public toString() {\n    return JSON.stringify(this.toSerializable(), null, 2);\n  }\n\n  /**\n   * Deserialize from result of ConfigItem.toSerializable().\n   *\n   * @param o result of ConfigItem.toSerializable()\n   */\n  static fromSerializable(o: any): ConfigItem {\n    let config = new ConfigItem();\n    config.type = o.type;\n    if (o.type === \"array\") {\n      config._children = this.fromSerializable(o.children);\n    } else if (o.type === \"object\") {\n      config._props = new Map();\n      for (let [key, value] of Object.entries(o.props)) {\n        config._props.set(key, this.fromSerializable(value));\n      }\n    }\n    return config;\n  }\n}\n\nexport default class JConfig {\n  public root: ConfigItem;\n\n  constructor() {\n    this.root = new ConfigItem();\n  }\n\n  public toString(): string {\n    let o: any = {};\n    o.root = this.root.toSerializable();\n    return JSON.stringify(o, null, 2);\n  }\n\n  public static fromJson(json: string): JConfig {\n    return this.fromData(JSON.parse(json));\n  }\n\n  public static fromData(data: any): JConfig {\n    const config = new JConfig();\n    this.dataToConfig(data, config.root);\n    return config;\n  }\n\n  private static dataToConfig(data: any, config: ConfigItem) {\n    config.type = R.is(Array, data) ? \"array\" : typeof (data);\n\n    if (config.type === \"array\") {\n      if (data.length > 0) {\n        this.dataToConfig(data[0], config.children);\n        if (config.children.type === \"object\") {\n          // TODO: discover properties from all elements in the array\n        }\n      }\n    } else if (data && config.type === \"object\") {\n      for (let [key, value] of Object.entries(data)) {\n        let childConfig = new ConfigItem();\n        config.props.set(key, childConfig);\n        this.dataToConfig(value, childConfig);\n      }\n    }\n  }\n\n  public static deserialize(json: string): JConfig {\n    let config = new JConfig();\n    let parsed = JSON.parse(json);\n    config.root = ConfigItem.fromSerializable(parsed.root);\n    return config;\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\nimport JPath from '../../jpath';\nimport { stringify } from './utils';\nimport JConfig from 'src/jconfig';\n\ninterface JsonEditState {\n  jsonString: string,\n  data: any,\n  config?: JConfig,\n  pathUnderMouse?: JPath,\n}\n\nconst initialState: JsonEditState = {\n  jsonString: \"null\",\n  data: null,\n};\n\nexport const STATE_KEY = \"jsonEdit\";\n\nexport const slice = createSlice({\n  name: STATE_KEY,\n  initialState,\n  reducers: {\n    clearPath(state: any) {\n      state.pathUnderMouse = null;\n    },\n    setPath(state: any, action: PayloadAction<any>) {\n      state.pathUnderMouse = action.payload;\n    },\n    updateJson(state: any, action: PayloadAction<any>) {\n      state.jsonString = action.payload;\n      state.data = JSON.parse(action.payload);\n      state.config = JConfig.fromData(state.data);\n    },\n    updateData(state: any, action: PayloadAction<any>) {\n      let { path, value } = action.payload;\n      state.data = path.update(state.data, value);\n      state.config = JConfig.fromData(state.data);\n      state.jsonString = stringify(state.data);\n    },\n    updatePropName(state: any, action: PayloadAction<any>) {\n      // TODO\n      // path = action.path;\n      // var oldName = action.oldName;\n      // var newName = action.newName;\n      // // TODO make a copy instead of change in place to support undo/redo\n      // current = path.findIn(state.data);\n      // current[newName] = current[oldName];\n      // delete current[oldName];\n      // return Object.assign({}, state, {\n      //     jsonString: JSON.stringify(state.data, null, 4),\n      //     data: state.data\n      // });\n    }\n  },\n});\n\nexport const {\n  clearPath,\n  setPath,\n  updateJson,\n  updateData,\n  updatePropName,\n} = slice.actions;\n\nexport const selectData = (state: RootState) => state[STATE_KEY].data;\nexport const selectConfig = (state: RootState) => state[STATE_KEY].config;\nexport const selectJsonString = (state: RootState) => state[STATE_KEY].jsonString;\nexport const selectPathUnderMouse = (state: RootState) => state[STATE_KEY].pathUnderMouse;\n\nexport default slice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../../../app/store';\n\ninterface EditPopupState {\n  editing: boolean,\n}\n\nconst initialState: EditPopupState = {\n  editing: false,\n};\n\nexport const STATE_KEY = \"editPopup\";\n\nexport const slice = createSlice({\n  name: STATE_KEY,\n  initialState,\n  reducers: {\n    show(state) {\n      state.editing = true;\n    },\n    hide(state) {\n      state.editing = false;\n    },\n  },\n});\n\nexport const { show, hide } = slice.actions;\n\nexport const selectEditing = (state: RootState) => state[STATE_KEY].editing;\n\nexport default slice.reducer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hide, selectEditing } from './slice';\n\nexport default function EditPopup({title, onSave, children}: any) {\n  const dispatch = useDispatch();\n  const editing = useSelector(selectEditing);\n\n  const closeHandler = () => {\n    dispatch(hide());\n  };\n  const saveHandler = () => {\n    dispatch(hide());\n    onSave();\n  };\n\n  return (\n    <div className={classNames(\"modal\", {\"is-active\": editing})}>\n      <form onSubmit={saveHandler}>\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <p className=\"modal-card-title\">{title}</p>\n            <button className=\"delete\" aria-label=\"close\" onClick={closeHandler}></button>\n          </header>\n          <section className=\"modal-card-body\">\n            {children}\n          </section>\n          <footer className=\"modal-card-foot\">\n            <button type=\"submit\" className=\"button is-success\">Save changes</button>\n            <button type=\"button\" className=\"button\" onClick={closeHandler}>Cancel</button>\n          </footer>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport EditPopup from './edit-popup';\nimport { selectEditing } from './edit-popup/slice';\nimport { selectData, selectPathUnderMouse, updateData } from './slice';\n\nexport default function JsonEditPopup() {\n  const dispatch = useDispatch();\n  let editing = useSelector(selectEditing);\n  let data = useSelector(selectData);\n  let pathUnderMouse = useSelector(selectPathUnderMouse);\n  let input: any;\n  useEffect(() => {\n    if (input) {\n      input.focus();\n    }\n  });\n\n  if (!editing) {\n    return null;\n  }\n\n  let dataToEdit = pathUnderMouse?.search(data);\n  const saveHandler = () => {\n    dispatch(updateData({ path: pathUnderMouse, value: input.value }));\n  }\n\n  return (\n    <EditPopup title=\"Edit\" onSave={saveHandler}>\n      <div className=\"field\">\n        <label className=\"label\">New Value:</label>\n        <div className=\"control\">\n          <input className=\"input\" type=\"text\" defaultValue={dataToEdit}\n            ref={node => input = node} />\n        </div>\n      </div>\n    </EditPopup>\n  );\n}\n","import * as R from 'ramda';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport GenericView from './GenericView';\nimport { createMouseOverHandler } from './utils';\n\nexport default function ArrayOfArraysView(props: any) {\n  const dispatch = useDispatch();\n\n  let { data, path, pathUnderMouse } = props;\n  let width = Number(R.last(data.map(R.length).sort()));\n\n  return (\n    <table className=\"table is-bordered is-striped json-array-array\"\n      onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n    >\n      <thead>\n        <tr className=\"head\">\n          <th className=\"index-col\">&nbsp;</th>\n          {\n            R.times((i) =>\n              <th align=\"center\" key={i}\n                onMouseOver={createMouseOverHandler(dispatch, path.createArrayAllChildren().createArrayChild(i), pathUnderMouse)}\n              >{i + 1}</th>\n              , width)\n          }\n        </tr>\n      </thead>\n      <tbody>\n        {\n          data.map((row: any, i: number) =>\n            <tr key={i} className={'row ' + (i % 2 === 0 ? 'odd' : 'even')}>\n              <td align=\"right\" valign=\"middle\" className=\"index-col\"\n                onMouseOver={createMouseOverHandler(dispatch, path.createArrayChild(i), pathUnderMouse)}\n              >{i + 1}</td>\n              {\n                R.times((j) => {\n                  let newPath = path.createArrayChild(i).createArrayChild(j);\n                  return (\n                    <td key={j}\n                      onMouseOver={createMouseOverHandler(dispatch, newPath, pathUnderMouse)}\n                    >\n                      <GenericView data={row[j]} path={newPath} pathUnderMouse={pathUnderMouse} />\n                    </td>\n                  );\n                }, width)\n              }\n            </tr>\n          )\n        }\n      </tbody>\n    </table>\n  );\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport GenericView from './GenericView';\nimport { createMouseOverHandler } from './utils';\n\nexport default function ArrayOfLiteralsView(props: any) {\n  const dispatch = useDispatch();\n  let { data, path, pathUnderMouse } = props;\n\n  return (\n    <div className=\"json-literal-array\"\n      onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n    >\n      {\n        data.map((row: any, i: number) =>\n          <GenericView key={i} data={row} path={path.createArrayChild(i)} />\n        )\n      }\n    </div>\n  );\n}","import * as R from 'ramda';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport GenericView from './GenericView';\nimport { createMouseOverHandler } from './utils';\n\nexport default function ArrayOfObjectsView(props: any) {\n  const dispatch = useDispatch();\n\n  let { data, path, pathUnderMouse } = props;\n  let keys = R.uniq(R.flatten(R.map(Object.keys, data)));\n\n  return (\n    <table className=\"table is-bordered is-striped json-object-array\"\n      onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n    >\n      <thead className=\"head\">\n        <tr>\n          <th className=\"index-col\">&nbsp;</th>\n          {\n            keys.map((key, i) =>\n              <th key={i}\n                onMouseOver={createMouseOverHandler(dispatch, path.createArrayAllChildren().createMapKeyChild(key), pathUnderMouse)}\n              >{key}</th>\n            )\n          }\n        </tr>\n      </thead>\n      <tbody>\n        {\n          data.map((row: any, i: number) =>\n            <tr key={i} className={'row ' + (i % 2 === 0 ? 'odd' : 'even')}\n              onMouseOver={createMouseOverHandler(dispatch, path.createArrayChild(i), pathUnderMouse)}\n            >\n              <td align=\"right\" valign=\"middle\" className=\"index-col\">{i + 1}</td>\n              {\n                keys.map((key, j) => {\n                  let newPath = path.createArrayChild(i).createMapValueChild(key);\n                  return (\n                    <td key={j}\n                      onMouseOver={createMouseOverHandler(dispatch, newPath, pathUnderMouse)}\n                    >\n                      <GenericView data={row[key]} path={newPath} pathUnderMouse={pathUnderMouse} />\n                    </td>\n                  );\n                })\n              }\n            </tr>\n          )\n        }\n      </tbody>\n    </table>\n  );\n}\n","import * as R from 'ramda';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport ArrayOfArraysView from './ArrayOfArraysView';\nimport ArrayOfLiteralsView from './ArrayOfLiteralsView';\nimport ArrayOfObjectsView from './ArrayOfObjectsView';\nimport { createMouseOverHandler } from './utils';\n\nexport default function ArrayView(props: any) {\n  const dispatch = useDispatch();\n\n  let { data, path, pathUnderMouse } = props;\n\n  if (R.isEmpty(data)) {\n    return (\n      <div className=\"json-empty-array\"\n        onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n      >Empty array</div>\n    );\n  } else if (R.is(Array, data[0])) {\n    return (<ArrayOfArraysView data={data} path={path} />);\n  } else if (R.is(Object, data[0])) {\n    return (<ArrayOfObjectsView data={data} path={path} />);\n  } else {\n    return (<ArrayOfLiteralsView data={data} path={path} />);\n  }\n}\n","import * as R from 'ramda';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { show } from './edit-popup/slice';\nimport { selectPathUnderMouse, setPath } from './slice';\nimport { createMouseOverHandler } from './utils';\n\nexport default function LiteralView(props: any) {\n  const dispatch = useDispatch();\n  let pathUnderMouse = useSelector(selectPathUnderMouse);\n\n  const { data, path } = props;\n\n  const editInPopup = () => {\n    dispatch(setPath(path));\n    dispatch(show());\n  }\n\n  if (R.is(Boolean, data)) {\n    return (\n      <div className=\"field\">\n        <input type=\"checkbox\" className=\"switch is-rounded\" checked={data}\n          onChange={() => { }} />\n        <label></label>\n      </div>\n    );\n  } else if (data === null) {\n    return (\n      <div className=\"json-literal json-null\"\n        onDoubleClick={editInPopup}\n        onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n      >\n        null\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"json-literal\"\n        onDoubleClick={editInPopup}\n        onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n      >\n        {data || ''}\n      </div>\n    );\n  }\n}\n","import * as R from 'ramda';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport GenericView from './GenericView';\nimport { createMouseOverHandler } from './utils';\n\nexport default function ObjectView(props: any) {\n  const dispatch = useDispatch();\n\n  let { data, path, pathUnderMouse } = props;\n\n  if (R.isEmpty(data)) {\n    return (\n      <div className=\"json-empty-object\"\n        onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n      >Empty object</div>\n    );\n  }\n\n  return (\n    <table className=\"table is-bordered is-striped json-object\"\n      onMouseOver={createMouseOverHandler(dispatch, path, pathUnderMouse)}\n    >\n      <thead>\n        <tr className=\"head\">\n          <th align=\"right\">&lt;name&gt;</th>\n          <th>&lt;value&gt;</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          Object.keys(data).sort().map((key, i) =>\n            <tr key={key} className={'row ' + (i % 2 === 0 ? 'odd' : 'even')}>\n              <td align=\"right\" valign=\"middle\" className=\"prop-name\"\n                onMouseOver={createMouseOverHandler(dispatch, path.createMapKeyChild(key), pathUnderMouse)}\n              >\n                {key || ''}\n              </td>\n              <td className=\"prop-value\"\n                onMouseOver={createMouseOverHandler(dispatch, path.createMapValueChild(key), pathUnderMouse)}\n              >\n                <GenericView data={data[key]} path={path.createMapValueChild(key)} />\n              </td>\n            </tr>\n          )\n        }\n      </tbody>\n    </table>\n  );\n}\n","import * as R from 'ramda';\nimport React from 'react';\nimport ArrayView from './ArrayView';\nimport LiteralView from './LiteralView';\nimport ObjectView from './ObjectView';\n\nexport default function GenericView(props: any) {\n  const { data } = props;\n\n  if (R.is(Array, data)) {\n    return (<ArrayView {...props} />);\n  } else if (R.is(Object, data)) {\n    return (<ObjectView {...props} />);\n  } else {\n    return (<LiteralView {...props} />);\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\n\nexport enum LayoutOrientation {\n  Vertical = 0,\n  Horizontal = 1,\n}\n\ninterface LayoutState {\n  orientation: LayoutOrientation,\n}\n\nconst initialState: LayoutState = {\n  orientation: LayoutOrientation.Vertical,\n};\n\nexport const STATE_KEY = \"layout\";\n\nexport const slice = createSlice({\n  name: STATE_KEY,\n  initialState,\n  reducers: {\n    changeOrientation(state: any, action: PayloadAction<any>) {\n    },\n  },\n});\n\nexport const {\n  changeOrientation,\n} = slice.actions;\n\nexport const selectOrientation = (state: RootState) => state[STATE_KEY].orientation;\n\nexport default slice.reducer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport JPath from '../../jpath';\nimport { selectEditing } from './edit-popup/slice';\nimport GenericView from './GenericView';\nimport { clearPath } from './slice';\nimport './index.scss';\n\nexport function JsonRootView({ data }: any) {\n  const dispatch = useDispatch();\n  const editing = useSelector(selectEditing);\n\n  const path = JPath.Root();\n\n  const mouseOutHandler = (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!editing) {\n      dispatch(clearPath());\n    }\n  }\n\n  return (\n    <div className=\"json-root\"\n      onMouseOut={mouseOutHandler}\n    >\n      <GenericView data={data} path={path} />\n    </div>\n  );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SplitPane from 'react-split-pane';\nimport './App.scss';\nimport Root from './features/config/Root';\nimport { selectConfig } from './features/json-edit/slice';\nimport JsonEditPopup from './features/json-edit/JsonEditPopup';\nimport { JsonRootView } from './features/json-edit/JsonRootView';\nimport { selectData, selectJsonString, selectPathUnderMouse, updateJson } from './features/json-edit/slice';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const data = useSelector(selectData);\n  const config = useSelector(selectConfig);\n  const jsonString = useSelector(selectJsonString);\n\n  let pathUnderMouse: any = useSelector(selectPathUnderMouse);\n  if (pathUnderMouse != null) {\n    pathUnderMouse = pathUnderMouse.toString();\n  }\n\n  let input: any;\n\n  return (\n    <div className=\"App\">\n      <div>\n        Current Path: <span id=\"path\">{pathUnderMouse}</span>\n        <SplitPane split=\"vertical\">\n          <JsonRootView data={data} />\n          {\n            config ? <Root config={config} /> : \"\"\n          }\n        </SplitPane>\n\n        <button className=\"update\"\n          onClick={() => dispatch(updateJson(input.value))}\n        >Update</button>\n        <br />\n        <textarea className=\"raw-json\" rows={25} cols={100}\n          ref={node => input = node}\n          value={jsonString}\n          onChange={event => dispatch(updateJson(event.target.value))} />\n      </div>\n      <JsonEditPopup />\n    </div>\n  );\n}\n","import { configureStore, ThunkAction, Action, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport layoutReducers from '../features/layout/slice';\nimport jsonEditReducers from '../features/json-edit/slice';\nimport editPopupReducers from '../features/json-edit/edit-popup/slice';\n\nexport const store = configureStore({\n  reducer: {\n    layout: layoutReducers,\n    jsonEdit: jsonEditReducers,\n    editPopup: editPopupReducers,\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './app/store';\nimport { updateJson } from './features/json-edit/slice';\nimport './index.scss';\nimport LocationHandler from './utils';\n\nlet jsonString = `\n  {\n    \"a\": \"a-value\",\n    \"b\": [\n      {\n        \"first\": \"first value\",\n        \"second\": \"second value\"\n      },\n      {\n        \"first\": \"first value 2\",\n        \"second\": \"second value 2\"\n      },\n      {\n        \"first\": \"first value 3\",\n        \"second\": \"second value 3\",\n        \"third\": \"third value 3\"\n      }\n    ],\n    \"c\": [\n      [\n        \"cell 1-1\",\n        {\n          \"first\": \"first value\",\n          \"second\": \"second value\"\n        }\n      ],\n      [\n        \"cell 2-1\",\n        {\n          \"first\": \"first value\",\n          \"second\": \"second value\"\n        }\n      ]\n    ],\n    \"d\": { \"name\": \"John Doe\", \"age\": 20, \"email\": \"john_doe@company.com\" },\n    \"e\": [ \"Test 1\", \"Test 2\", \"Test 3\" ],\n    \"f\": true,\n    \"g\": [],\n    \"h\": {},\n    \"i\": null\n  }\n`;\n\nconst locationHandler = new LocationHandler();\nif (locationHandler.hasJson) {\n  (async () => {\n    jsonString = await locationHandler.getText();\n    store.dispatch(updateJson(jsonString));\n  })();\n} else {\n  store.dispatch(updateJson(jsonString));\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","const PROXY = \"https://yacdn.org/serve/\";\n\nexport default class LocationHandler {\n  public hasJson: boolean = false;\n  private jsonUrl?: string;\n  public useProxy: boolean = false;\n\n  constructor() {\n    const url = new URL(window.location.toString());\n    const proxy = url.searchParams.get('proxy');\n    this.useProxy = proxy === '1' || proxy === 'true';\n\n    let jsonUrl = url.searchParams.get('json-url');\n    if (jsonUrl) {\n      this.hasJson = true;\n      if (this.useProxy) {\n        jsonUrl = `${PROXY}${jsonUrl}`;\n      }\n      this.jsonUrl = jsonUrl;\n    }\n  }\n\n  public async getText(): Promise<string> {\n    let response = await fetch(decodeURI(this.jsonUrl as string));\n    return response.text();\n  }\n}\n"],"sourceRoot":""}